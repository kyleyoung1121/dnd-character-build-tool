import{g}from"./BVPYibDR.js";import{c as b}from"./BMQPE_bs.js";function _(){const e=g(b),t=[];if(!e._provenance)return{hasConflicts:!1,conflicts:[],tabsNeedingAttention:[]};const n={skill:{},proficiency:{},language:{},feature:{}};for(const[i,s]of Object.entries(e._provenance)){const a="_set"in s&&s._set?s._set:s;if(a)for(const[r,l]of Object.entries(a)){if(!Array.isArray(l))continue;let c;switch(r){case"skills":c="skill";break;case"proficiencies":c="proficiency";break;case"languages":c="language";break;case"features":c="feature";break;default:continue}for(const o of l)n[c][o]||(n[c][o]=[]),n[c][o].push(i)}}for(const[i,s]of Object.entries(n))for(const[a,r]of Object.entries(s))if(r.length>1){const l=h(r);t.push({type:i,value:a,sources:r,affectedTabs:l})}const u=[...new Set(t.flatMap(i=>i.affectedTabs||[]))];return{hasConflicts:t.length>0,conflicts:t,tabsNeedingAttention:u}}function h(e){const t=new Set,n=new Set;for(const s of e)s.startsWith("class:")||s.startsWith("feature:")&&d(s)?(t.add("class"),f(s)&&n.add("class")):s.startsWith("race:")||y(s)?(t.add("species"),k(s)&&n.add("species")):s.includes("background")&&(t.add("background"),n.add("background"));const u=Array.from(t),i=Array.from(n);return[...i,...u.filter(s=>!i.includes(s))]}function f(e){return/:\d+$/.test(e)&&(e.includes("Skill Proficiencies")||e.includes("Bonus Proficiencies")||e.includes("Expertise")||e.includes("college_of_lore"))}function k(e){return/:\d+$/.test(e)&&(e.includes("Tool Proficiency")||e.includes("Cantrip")||e.includes("Draconic Ancestry"))}function d(e){return e.includes("Skill Proficiencies")||e.includes("Skills")||e.includes("Bonus Proficiencies")||e.includes("Expertise")||e.includes("college_of_lore")}function y(e){return e.includes("Keen Senses")||e.includes("Fey Ancestry")||e.includes("Trance")||e.includes("Darkvision")||e.includes("Dwarven")||e.includes("Elven")||e.includes("Halfling")||e.includes("Draconic")||e.includes("Tool Proficiency")}function m(e){const t=e.sources.filter(n=>f(n)||isUserChangeableRaceFeature(n)||n.includes("background"));if(t.length===0)return null;for(const n of t){if(n.startsWith("class:")||d(n))return"class";if(n.startsWith("race:")||isRaceFeature(n))return"race";if(n.includes("background"))return"background"}return null}export{_ as d,m as g};
